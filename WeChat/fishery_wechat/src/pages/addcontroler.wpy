<style lang="less">
.addcontroler{
  color: #323B45;
  font-size: 32rpx;
  .addcontroler-item{
    width: 650rpx;
    height: 110rpx;
    box-shadow: 0 2rpx 0 0 rgba(168,182,200,0.30);
    margin-left: 42rpx;
    margin-top: 16rpx;
    line-height: 110rpx;
    font-size: 32rpx;
    padding-left: 20rpx;
    .fright{
      float: right;
    }
    .rightinp{
      margin-top: 30rpx;
      float: right;
    }
    .num{
      margin-right: 20rpx;
      width: 30rpx;
      height: 30rpx;
      position: relative;
      top: 4rpx;
    }
    .name{
      margin-right: 26rpx;
      width: 24rpx;
      height: 30rpx;
      position: relative;
      top: 4rpx;
    }
  }
  .addequiment{
    background-color: #f2f2f2;
    padding: 33rpx;
    .equiment-item{
      width: 686rpx;
      height: 520rpx;
      margin-bottom: 33rpx;
      background-color: #ffffff;
      .name{
        padding-left: 36rpx;
        padding-top: 33rpx;
      }
      .einput{
        width:630rpx;
        height: 100rpx;
        line-height: 100rpx;
        margin-left: 30rpx;
        margin-top: 32rpx;
        background-color: #FAFDFC;
        .unbindport{
          float:right;
          margin-top:26rpx;
          border:1rpx solid #2f70b8;
          border-radius:40rpx;
          height:50rpx;
          line-height:50rpx;
          width:100rpx;
          text-align:center;
          color: #2f70b8;
          margin-left:20rpx;
        }
        .rightinp{
          width: 270rpx;
          float: right;
          margin-top: 26rpx;
          text-align: right;
          overflow: hidden;
          text-overflow:ellipsis;
          white-space: nowrap;
        }
      }
    }
  }
   .confirmbut {
    width: 650rpx;
    height: 100rpx;
    font-size: 32rpx;
    line-height: 100rpx;
    background: #2F70B8;
    border-radius: 146rpx;
    text-align: center;
    margin-left: 50rpx;
    color: #ffffff;
    margin-top: 30rpx;
    margin-bottom: 30rpx;
  }
  .mask{
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background: #000;
    z-index: 9000;
    opacity: 0.7;
  }
  .modalDlg{
    width: 670rpx;
    position: fixed;
    top: 50%;
    left: 0;
    z-index: 9999;
    margin: -400rpx 40rpx;
    background-color: #fff;
    border-radius: 16rpx;
    font-size: 32rpx;
    .close{
      width: 72rpx;
      height: 72rpx;
      border-radius: 36rpx;
      position: absolute;
      top: -92rpx;
      right:18rpx;
      .closeimg{
        width: 72rpx;
        height: 72rpx;
      }
      .closeline{
        width: 4rpx;
        height: 20rpx;
        background-color: #fff;
        position: absolute;
        top:72rpx;
        left: 36rpx;
      }
    }
    .checkbox-item{
      height: 100rpx;
      line-height: 100rpx;
      border-bottom: 2rpx solid #D4D5D8;
      image{
        width: 44rpx;
        height: 44rpx;
        margin-left: 226rpx;
        margin-right: 20rpx;
        margin-top: 28rpx;
        position: relative;
        top:8rpx;
      }
      .select{
        color:#2F70B8;
      }
    }
    .add-but{
      width: 480rpx;
      height: 90rpx;
      line-height: 90rpx;
      border: 2rpx solid #2F70B8;
      color: #2F70B8;
      font-size: 32rpx;
      border-radius: 120rpx;
      margin-top: 40rpx;
      margin-left: 94rpx;
      margin-bottom: 40rpx;
      image{
        width:32rpx;
        height:32rpx;
        margin-left: 152rpx;
        position: relative;
        top:4rpx;
        left:-6rpx;
      }
    }
    .modal-but{
        width: 480rpx;
        height: 90rpx;
        line-height: 90rpx;
        background: #2F70B8;
        color: #fff;
        font-size: 32rpx;
        border-radius: 120rpx;
        margin-top: 40rpx;
        margin-bottom: 40rpx;
    }
  }
}
</style>
<template>
<view class="addcontroler">

  <!--头部-->
  <view class="addcontroler-item">
    <image class="num" src="../images/型@2x.png"></image>设备编号
    <text class="fright">{{equimentNum}}</text>
  </view>
  <view class="addcontroler-item">
    <image class="num" src="../images/型@2x.png"></image>设备类型
    <text class="fright">控制器</text>
  </view>

  <!--列表部分-->
  <view class="addequiment">
    <view class="equiment-item">
      <view class="name">1路控制器</view>
      <view class="einput">
        <text>设备名称</text>
        <input class="rightinp" value="{{equimentinfo[0].name}}" placeholder="请输入控制器名称" bindinput="bindValue(0)" placeholder-style="color:#4D7FB5" />
      </view>
      <view class="einput">
        <text>类型选择</text>
        <input class="rightinp" @tap="showmodal('type', 0)" value="{{typelist[equimentinfo[0].type]}}" placeholder="请选择控制器类型" placeholder-style="color:#4D7FB5" disabled/>
      </view>
      <view class="einput">
        <text>绑定塘口</text>
        <view class="unbindport" @tap="unBindBtn(1)" wx:if="{{pond[0]}}">解绑</view>
        <input class="rightinp" @tap="showmodal('tangkou', 0)" value="{{pond[0]}}" placeholder="请绑定塘口" placeholder-style="color:#4D7FB5" disabled/>
      </view>
    </view>

    <view class="equiment-item">
      <view class="name">2路控制器</view>
      <view class="einput">
        <text>设备名称</text>
        <input class="rightinp" value="{{equimentinfo[1].name}}" placeholder="请输入控制器名称" bindinput="bindValue(1)" placeholder-style="color:#4D7FB5" />
      </view>
      <view class="einput">
        <text>类型选择</text>
        <input class="rightinp" @tap="showmodal('type', 1)" value="{{typelist[equimentinfo[1].type]}}" placeholder="请选择控制器类型" placeholder-style="color:#4D7FB5" disabled/>
      </view>
      <view class="einput">
        <text>绑定塘口</text>
        <view class="unbindport" @tap="unBindBtn(2)" wx:if="{{pond[1]}}">解绑</view>
        <input class="rightinp" @tap="showmodal('tangkou', 1)"  value="{{pond[1]}}" placeholder="请绑定塘口" placeholder-style="color:#4D7FB5" disabled/>
      </view>
    </view>

    <view class="equiment-item">
      <view class="name">3路控制器</view>
      <view class="einput">
        <text>设备名称</text>
        <input class="rightinp" value="{{equimentinfo[2].name}}" placeholder="请输入控制器名称" bindinput="bindValue(2)" placeholder-style="color:#4D7FB5" />
      </view>
      <view class="einput">
        <text>类型选择</text>
        <input class="rightinp" @tap="showmodal('type', 2)" value="{{typelist[equimentinfo[2].type]}}" placeholder="请选择控制器类型" placeholder-style="color:#4D7FB5" disabled/>
      </view>
      <view class="einput">
        <text>绑定塘口</text>
        <view class="unbindport" @tap="unBindBtn(3)" wx:if="{{pond[2]}}">解绑</view>
        <input class="rightinp" @tap="showmodal('tangkou', 2)" value="{{pond[2]}}" placeholder="请绑定塘口" placeholder-style="color:#4D7FB5" disabled/>
      </view>
    </view>

    <view class="equiment-item">
      <view class="name">4路控制器</view>
      <!--设备名称-->
      <view class="einput">
        <text>设备名称</text>
        <input class="rightinp" value="{{equimentinfo[3].name}}"
               placeholder="请输入控制器名称"
               bindinput="bindValue(3)" placeholder-style="color:#4D7FB5" />
      </view>
      <!--类型选择-->
      <view class="einput">
        <text>类型选择</text>
        <input class="rightinp" @tap="showmodal('type', 3)"
               value="{{typelist[equimentinfo[3].type]}}"
               placeholder="请选择控制器类型"
               placeholder-style="color:#4D7FB5" disabled/>
      </view>
      <!--绑定塘口-->
      <view class="einput">
        <text>绑定塘口</text>
        <view class="unbindport" @tap="unBindBtn(4)"
              wx:if="{{pond[3]}}">解绑</view>
        <input class="rightinp" @tap="showmodal('tangkou', 3)"
               value="{{pond[3]}}"
               placeholder="请绑定塘口" placeholder-style="color:#4D7FB5" disabled/>
      </view>
    </view>
  </view>

  <!--确定按钮-->
  <view class="confirmbut" @tap="addCon">确定</view>

  <!--模态框-->
  <view class="mask" catchtouchmove="preventTouchMove" wx:if="{{showModal}}"></view>
    <view class="modalDlg" wx:if="{{showModal}}">
      <view class="close" @tap="closemodal">
        <image class="closeimg" src="../images/叉_cross80@2x.png"></image>
        <view class="closeline"></view>
      </view>

      <!-- 塘口单选 -->
      <view wx:if="{{ whatShow === 'tangkou' }}" >

        <!--列表-->
        <repeat for="{{pondlist}}" key="index" index="index">

          <!--循环展示的那一部分-->
          <view class="checkbox-item" data-selectindex="{{index}}"
                data-pondid="{{item.id}}" data-pond="{{item.name}}"
                @tap="selectTangkou">

            <!--添加选中效果的那一部分-->
            <view class="{{item.status === 1 ? 'select' : ''}}">
              <image src="{{item.status === 1 ? moreselectImage : noselectImage}}"></image>
              <text>{{item.name}}</text>
            </view>

          </view>

        </repeat>

        <!--两个按钮-->
        <view @tap="jumAddTangkou" class="add-but">
          <image src="../images/_5@2x.png"></image><text>新增塘口</text>
        </view>
        <button wx:if="{{tangkoulist.length !== 0}}" class="modal-but"
                @tap="confirmTangkou">确定</button>
      </view>

      <!-- 设备单选 -->
      <view wx:else >
        <repeat for="{{typelist}}" key="index" index="index">
        <view class="checkbox-item" data-type="{{index}}" @tap="selectEqu">
          <view class="{{typeid === index ? 'select' : ''}}">
            <image src="{{typeid === index ? oneselectImage : noselectImage}}"></image><text>{{item}}</text>
          </view>
      </view>
      </repeat>
      <button class="modal-but" @tap="confirmEqu">确定</button>
      </view>
    </view>
</view>
</template>
<script>
import wepy from 'wepy'
export default class Addcontroler extends wepy.page {
  config = {
    navigationBarTitleText: '添加设备'
  }
  data= {
    showModal: false,
    selectid: '',   // 选中的塘口的index
    typeid: '',     // 选设备
    tangkoulist: [],    // 塘口所有信息列表
    pondIds: [[], [], [], []],      // 塘口id
    pond: ['', '', '', ''],     // 塘口名称展示的字符串
    pondlist: [],   // 塘口id:名字列表
    action: '',     // 修改还是新增
    typelist: ['增氧机', '投饵机', '打水机', '其他'],  // 设备类型列表
    whatShow: '',   // 显示塘口还是类型
    whichroad: '',    // 哪一路
    type: '',     // 设备类型
    oneselectImage: '../images/group_2@2x.png',   // 中间圆点的选中图（设备）
    moreselectImage: '../images/_14_copy@2x.png',   // 中间对勾的选中图（塘口）
    noselectImage: '../images/_14_copy 2@2x.png',   // 没选中
    equimentNum: '0430083262',    // 设备编号
    equimentinfo: [
      {
        device_sn: '',
        name: '',
        pondIds: [],
        port: 1,
        relation: '',
        type: ''
      },
      {
        device_sn: '',
        name: '',
        pondIds: [],
        port: 2,
        relation: '',
        type: ''
      },
      {
        device_sn: '',
        name: '',
        pondIds: [],
        port: 3,
        relation: '',
        type: ''
      },
      {
        device_sn: '',
        name: '',
        pondIds: [],
        port: 4,
        relation: '',
        type: ''
      }
    ]    // 设备绑定信息列表
  }
  methods= {
    // 解绑
    unBindBtn(port) {
      wepy.showLoading()
      wepy.request({
        url: this.$parent.globalData.baseUrl + 'api/' + 'bind/delControllerBind',
        data: {
          port: port,
          device_sn: this.equimentinfo[port].device_sn
        },
        method: 'GET',
        success: res => {
          if (res.data.msg === '成功') {
            wepy.showToast({
              title: '解绑成功',
              icon: 'success',
              duration: 2000,
              success: res => {
                wepy.navigateTo({
                  url: `myequiment`
                })
              },
              complete: () => {
                wepy.hideLoading()
              }

            })
          } else {
            wepy.showToast({
              title: '解绑失败',
              icon: 'none',
              duration: 2000
            })
          }
        }
      })
    },

    // 新增塘口
    jumAddTangkou() {
      wepy.navigateTo({
        url: 'addtangkou'
      })
    },

    // 显示模态框
    showmodal(how, num) {
      this.whatShow = how
      this.whichroad = num
      let ids = this.pondIds[num]
      ids.map(value => {
        this.pondlist.map(v => {
          if (v.id === value) {
            v.status = 1
          }
        })
      })
      this.showModal = true
      this.$apply()
    },

    // 关闭模态框
    closemodal() {
      // 恢复0
      this.pondlist.map(value => {
        value.status = 0
      })
      this.showModal = false
      this.$apply()
    },

    // 绑定信息列表，对应的那一路，绑定名字
    bindValue(num, e) {
      this.equimentinfo[num].name = e.detail.value
    },

    // 选塘口
    selectTangkou(e) {
      // 更新塘口id
      let ids = this.pondIds[this.whichroad]
      let id = e.currentTarget.dataset.pondid
      this.pondIds[this.whichroad] = this.pondIds[this.whichroad].filter(item => item !== 0)
      // 是否存在id
      if (ids.indexOf(id) > -1) {
        this.pondIds[this.whichroad] = this.pondIds[this.whichroad].filter(item => item !== id)
        // 恢复
        this.pondlist.map(v => {
          if (v.id === id) {
            v.status = 0
          }
        })
      } else {
        this.pondIds[this.whichroad].push(id)
        let newIds = new Set(this.pondIds[this.whichroad])
        this.pondIds[this.whichroad] = Array.from(newIds)
        this.pondIds[this.whichroad].map(value => {
          this.pondlist.map(v => {
            if (v.id === value) {
              v.status = 1
            }
          })
        })
        this.$apply()
      }
      // 获得点击的那个塘口的index
      let index = e.currentTarget.dataset.selectindex
      this.selectid = index
      this.$apply()
      console.log('ids', this.pondIds)
    },

    // 模态框确定塘口
    confirmTangkou() {
      this.equimentinfo[this.whichroad].pondIds = this.pondIds[this.whichroad]
      this.equimentinfo[this.whichroad].device_sn = this.equimentNum
      this.equimentinfo[this.whichroad].relation = this.$parent.globalData.relation
      let newPond = []
      // 更新塘口列表
      this.pondIds[this.whichroad].map(value => {
        // 最后for塘口列表
        this.pondlist.map(v => {
          if (v.id === value) {
            newPond.push(v.name)
          }
        })
      })
      this.pond[this.whichroad] = newPond.join()
      this.showModal = false
      // 恢复0
      this.pondlist.map(value => {
        value.status = 0
      })
      this.$apply()
      console.log('this.pond[this.whichroad]', this.pond[this.whichroad])
    },

    // 选定设备类型
    selectEqu(e) {
      this.type = e.currentTarget.dataset.type
      let index = e.currentTarget.dataset.type
      this.typeid = index
      this.$apply()
    },

    // 确定设备类型
    confirmEqu() {
      this.equimentinfo[this.whichroad].type = this.type
      this.showModal = false
      this.$apply()
    },

    // 设备的确定按钮
    addCon() {
      // name: '',
      //   pondIds: [],
      //   port: 4,
      //   type: ''
      // if (this.equimentinfo[0].name === '' || this.equimentinfo[0].type === '' || this.equimentinfo[0].pondIds.length === 0 || this.equimentinfo[0].pondIds[0] !== 0) {
      //   wepy.showToast({title: '1路控制器有信息未填写，请补全信息', icon: 'none', duration: 2000})
      //   console.log(this.equimentinfo[0])
      //   return 0
      // }
      if (this.action === 'modify') {
        wepy.request({
          url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/modifyController',
          data: this.equimentinfo,
          method: 'POST',
          success: res => {
            if (res.data.code === 0) {
              wepy.redirectTo({
                url: 'myequiment'
              })
            } else {
              wepy.showToast({title: res.data.msg, icon: 'none'})
            }
          },
          complete: () => {
            wepy.hideLoading()
          }
        })
      } else {
        wepy.request({
          url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/addController',
          data: this.equimentinfo,
          method: 'POST',
          success: res => {
            if (res.data.code === 0) {
              wepy.redirectTo({
                url: 'equimentsuccess'
              })
            } else {
              wepy.showToast({title: res.data.msg, icon: 'none'})
            }
          },
          complete: () => {
            wepy.hideLoading()
          }
        })
      }
    }
  }
  onLoad(options) {
    // 获取url中参数（设备号和操作类型）
    if (options.number) {
      this.equimentNum = options.number
      this.equimentinfo.map(value => {
        value.device_sn = this.equimentNum
      })
    }
    this.action = options.action ? options.action : 'add'
    console.log('options', options.data)
    // 修改页面标题
    if (this.action === 'modify') {
      wepy.setNavigationBarTitle({
        title: '修改设备'
      })
    }
    // 把每路设备的信息一个一个填进去
    if (options.data) {
      let list = JSON.parse(options.data)
      for (let i = 0; i < list.length; i++) {
        this.equimentinfo.map(value => {
          if (value.port === list[i].port) {
            value.device_sn = list[i].device_sn
            value.name = list[i].name
            value.pondIds = list[i].pondIds
            value.relation = list[i].relation
            value.type = list[i].type
          }
        })
      }
    }
    // 查询塘口
    wepy.showLoading()
    wepy.request({
      url: this.$parent.globalData.baseUrl + 'api/' + 'pond/WXquery',
      data: {
        relation: this.$parent.globalData.relation
      },
      method: 'GET',
      success: res => {
        if (res.data.code === 0) {
          // 塘口列表
          this.tangkoulist = res.data.data
          // 塘口名字列表
          let pondlist = []
          res.data.data.forEach(value => {
            pondlist.push({id: value.id, name: value.name, status: 0})
          })
          this.pondlist = pondlist
          console.log('pondlist', pondlist)
          // 把列表一个一个填满
          // 先for塘口ids
          for (let i = 0; i < this.equimentinfo.length; i++) {
            this.pondIds[i] = this.equimentinfo[i].pondIds
            console.log('this.pondIds[i]', this.pondIds[i])
            // 再for塘口名字
            let newPond = []
            this.pondIds[i].map(value => {
              // 最后for塘口列表
              this.pondlist.map(v => {
                if (v.id === value) {
                  newPond.push(v.name)
                }
              })
            })
            this.pond[i] = newPond.join()
          }
          this.$apply()
        } else {
          wepy.showToast({title: res.data.msg, icon: 'none'})
        }
      },
      complete: () => {
        wepy.hideLoading()
      }
    })
  }
}
</script>
