<style lang="less">
</style>
<template>
      <view>
        <echarts :ec.sync="wt" canvas-id="aaaa" />
      </view>
</template>
<script>
  import wepy from 'wepy'
  import Echarts from './echart'

export default class Line2 extends wepy.page {
    components = {
      echarts: Echarts
    }
    data = {
      switchToday: false,
      showModal: false,
      ec: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [],
            markLine: {
              symbol: '',
              itemStyle: {
                lineStyle: {type: 'solid'},
                label: {show: true, position: 'left', formatter: 'aaa'}
              },
              data: [
                { yAxis: 2,
                  itemStyle: {
                    color: '#beac00'
                  }
                },
                { yAxis: 3,
                  itemStyle: {
                    width: 1.5,
                    color: '#45795b'
                  }
                },
                { yAxis: 5,
                  itemStyle: {
                    width: 1.5,
                    color: '#b3675b'
                  }
                }
              ]
            }
          }]
        }
      },
      wt: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5],
            markLine: {
              symbol: '',
              itemStyle: {
                lineStyle: {type: 'solid'},
                label: {show: true, position: 'left', formatter: 'aaa'}
              },
              data: [
                { yAxis: 2,
                  itemStyle: {
                    color: '#beac00'
                  }
                },
                { yAxis: 3,
                  itemStyle: {
                    width: 1.5,
                    color: '#45795b'
                  }
                },
                { yAxis: 5,
                  itemStyle: {
                    width: 1.5,
                    color: '#b3675b'
                  }
                }
              ]
            }
          }]
        }
      },
      ph: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5]
          }]
        }
      },
      time: '',
      ind: 0,
      tangkoulist: [],
      realTimeDataInfo: [],
      selectImage: '../images/_14_copy@2x.png',
      noselectImage: '../images/_14_copy 2@2x.png'
    }
    methods = {
      switchToday() {
        this.switchToday = !this.switchToday
      },
      showModal() {
        this.showModal = true
      },
      selectRep(e) {
        let index = e.currentTarget.dataset.selectindex
        this.id = index
        this.tang = e.currentTarget.dataset.pond
        this.equimentinfo[0].pondId = e.currentTarget.dataset.pondid
        console.log(index)
        this.$apply()
      },
      closemodal() {
        this.showModal = false
        this.$apply()
      },
      // 跳转到更多塘口
      jupMoreEquiment() {
        wepy.navigateTo({
          url: `myequiment`
        })
      }
    }
    events = {}
    onShow() {
      // yyyy/mm/dd
      let nowDate = new Date()
      let year = nowDate.getFullYear()
      let month = nowDate.getMonth() + 1 < 10 ? '0' + (nowDate.getMonth() + 1)
        : nowDate.getMonth() + 1
      let day = nowDate.getDate() < 10 ? '0' + nowDate.getDate() : nowDate
        .getDate()
      let dateStr = year + '/' + month + '/' + day
      this.time = dateStr
      console.log(this.time)
      this.$apply()
    }
    onLoad(options) {
      var newWT = {
        textStyle: {
          color: '#c4c4c4'
        },
        color: ['#8dc1aa'],
        xAxis: [{
          type: 'category',
          boundaryGap: false,
          data: [1, 2, 3, 4, 5],
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          }
          // axisLabel: {//y轴的内容格式化,很有用的属性
          //   formatter: '{value} xUnit'
          // }
        }],
        yAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#e9e7de',
              type: 'dashed'
            }
          }
        }],
        series: [{
          lineStyle: {
            color: '#2c90f7'
          },
          type: 'line',
          data: [1, 2, 3, 4, 5]
        }]
      }
      var newPH = {
        textStyle: {
          color: '#c4c4c4'
        },
        color: ['#8dc1aa'],
        xAxis: [{
          type: 'category',
          boundaryGap: false,
          data: [1, 2, 3, 4, 5],
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          }
          // axisLabel: {//y轴的内容格式化,很有用的属性
          //   formatter: '{value} xUnit'
          // }
        }],
        yAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#e9e7de',
              type: 'dashed'
            }
          }
        }],
        series: [{
          lineStyle: {
            color: '#2c90f7'
          },
          type: 'line',
          data: [1, 2, 3, 4, 5]
        }]
      }
      if (options.id) {
        this.ind = options.id
      }
      // 获取塘口信息
      wepy.showLoading()
      wepy.request({
        url: this.$parent.globalData.baseUrl + 'api/' + 'usermanagement/HomePageDetail',
        data: {
          relation: this.$parent.globalData.relation
        },
        method: 'GET',
        success: res => {
          // 如果有塘口
          console.log(res.data.myHome)
          console.log(res.data.myHome[0].sensorlist)
          this.tangkoulist = res.data.myHome
          if (res.data.myHome[this.ind].sensorlist.length > 0) {
            // 获取实时数据
            let deviceSn = res.data.myHome[this.ind].sensorlist[0].sensor.device_sn
            // wepy.connectSocket({
            //   url: 'wss://192.168.0.111:8080/fishery/api/equipment/realTimeData',
            //   data: {
            //     device_sn: deviceSn
            //   },
            //   method: 'GET'
            // })
            // wepy.onSocketOpen((res) => {
            //   console.log('WebSocket连接已打开！')
            // })
            // wepy.onSocketMessage((res) => {
            //   console.log('收到服务器内容：' + res.data)
            // })

            wepy.showLoading()
            wepy.request({
              url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/realTimeData',
              data: res.data.myHome[this.ind].sensorlist[0].sensor,
              method: 'GET',
              success: res => {
                console.log(res.data)
                this.realTimeDataInfo = res.data
                this.$apply()
              },
              complete: () => {
                wepy.hideLoading()
              }
            })
            // 获取当天数据
            wepy.showLoading()
            wepy.request({
              url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/dataToday',
              data: {
                device_sn: deviceSn,
                way: 1
              },
              method: 'GET',
              success: res => {
                this.ec.option = {
                  textStyle: {
                    color: '#c4c4c4'
                  },
                  color: ['#8dc1aa'],
                  xAxis: [{
                    type: 'category',
                    boundaryGap: false,
                    data: res.data.DO.at,
                    axisLine: {
                      lineStyle: {
                        color: '#c4c4c4'
                      }
                    },
                    axisLabel: {// y轴的内容格式化,很有用的属性
                      formatter: '{value} xUnit'
                    }
                  }],
                  yAxis: [{
                    type: 'value',
                    axisLine: {
                      lineStyle: {
                        color: '#c4c4c4'
                      }
                    },
                    splitLine: {
                      lineStyle: {
                        color: '#e9e7de',
                        type: 'dashed'
                      }
                    }
                    // axisLabel: {//y轴的内容格式化,很有用的属性
                    //   formatter: '{value} yUnit'
                    // }
                  }],
                  series: [{
                    lineStyle: {
                      color: '#2c90f7'
                    },
                    type: 'line',
                    data: res.data.DO.value,
                    markLine: {
                      symbol: '',
                      itemStyle: {
                        lineStyle: {type: 'solid'},
                        label: {show: true, position: 'left', formatter: 'aaa'}
                      },
                      data: [
                        { yAxis: 2,
                          itemStyle: {
                            color: '#beac00'
                          }
                        },
                        { yAxis: 3,
                          itemStyle: {
                            width: 1.5,
                            color: '#45795b'
                          }
                        },
                        { yAxis: 5,
                          itemStyle: {
                            width: 1.5,
                            color: '#b3675b'
                          }
                        }
                      ]
                    }
                  }]
                }
                this.$apply()
                // newWT.xAxis.data = res.data.WT.at
                // newWT.series.data = res.data.WT.value
                // this.wt.option = newWT
                // newPH.xAxis.data = res.data.PH.at
                // newPH.series.data = res.data.PH.value
                // this.ph.option = newPH
                // this.$apply()
                // console.log(this.ec.option)
              },
              complete: () => {
                wepy.hideLoading()
              }
            })
          }
        },
        complete: () => {
          wepy.hideLoading()
        }
      })
    }
}
</script>
