<style lang="less">
.line{
  .mask{
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background: #000;
    z-index: 9000;
    opacity: 0.7;
  }
  .modalDlg{
    width: 670rpx;
    position: fixed;
    top: 50%;
    left: 0;
    z-index: 9999;
    margin: -400rpx 40rpx;
    background-color: #fff;
    border-radius: 16rpx;
    font-size: 32rpx;
    .close{
      width: 72rpx;
      height: 72rpx;
      border-radius: 36rpx;
      position: absolute;
      top: -92rpx;
      right:18rpx;
      .closeimg{
        width: 72rpx;
        height: 72rpx;
      }
      .closeline{
        width: 4rpx;
        height: 20rpx;
        background-color: #fff;
        position: absolute;
        top:72rpx;
        left: 36rpx;
      }
    }
    .checkbox-item{
      height: 100rpx;
      line-height: 100rpx;
      border-bottom: 2rpx solid #D4D5D8;
      image{
        width: 44rpx;
        height: 44rpx;
        margin-left: 226rpx;
        margin-right: 20rpx;
        margin-top: 28rpx;
        position: relative;
        top:8rpx;
      }
      .select{
        color:#2F70B8;
      }
    }
    .modal-but{
      width: 480rpx;
      height: 90rpx;
      line-height: 90rpx;
      background: #2F70B8;
      color: #fff;
      font-size: 32rpx;
      border-radius: 120rpx;
      margin-top: 40rpx;
      margin-bottom: 40rpx;
    }
  }
  font-size: 30rpx;
  color: #4E4E4E;
  .header{
    border: 2rpx solid #E6E6E6;
    .sensorname{
      width: 348rpx;
      height: 60rpx;
      font-size: 28rpx;
      display: inline-block;
      background-color: #F2F2F2;
      text-align: center;
      border-radius: 124rpx;
      line-height: 60rpx;
      padding-right: 30rpx;
      margin-left: 30rpx;
      margin-top: 32rpx;
      margin-bottom: 26rpx;
      overflow: hidden;
    }
    .header-img{
      width:30rpx;
      height:20rpx;
      position: relative;
      top: -45rpx;
      left: -40rpx;
    }
    .status{
      display: inline-block;
      position: relative;
      top: -46rpx;
      color:#FFC06B;
      .status-dot{
        display: inline-block;
        width: 16rpx;
        height: 16rpx;
        border-radius: 8rpx;
        margin-right: 10rpx;
        background-color: #FFC06B;
      }
    }
    .andmore{
      float: right;
      margin-top: 44rpx;
      margin-right: 20rpx;
    }
  }
  .content{
    .cot-name{
      padding: 34rpx;
      .time{
        color: #B5B5B5;
        float: right;
      }
    }
    .cot{
      font-size: 28rpx;
      .cot-index{
        display: inline-block;
        .target{
          width: 208rpx;
          height: 220rpx;
          margin: 18rpx;
          box-shadow: 0 4rpx 16rpx 0 rgba(225,225,225,0.50);
          border-radius: 16rpx;
          .o2{
            width:80rpx;
            height:80rpx;
            margin-left: 70rpx;
            margin-top: 46rpx;
          }
          .ph{
            width:65rpx;
            height:115rpx;
            margin-left: 70rpx;
            margin-top: 34rpx;
          }
          .data{
            padding-top: 20rpx;
            text-align: center;
          }
          .data1{
            padding-top: 8rpx;
            text-align: center;
          }
        }
        .res{
          position: relative;
          left: 104rpx;
        }
      }
    }
    .cut{
      margin-top: 20rpx;
      height: 40rpx;
      background-color: #F2F2F2;
    }
  }
  .line{
    .line-but{
      padding: 60rpx;
      .but-index{
        width: 176rpx;
        height: 60rpx;
        margin-left: 90rpx;
        display: inline-block;
        line-height: 60rpx;
        text-align: center;
        border-radius: 200rpx;
        border: 2rpx solid #2F70B8;
      }
    }
  }
  .cha{
    height: 518rpx;
    width: 698rpx;
    background: #f9f9f9;
    margin: 30rpx;
  }
  ec-canvas {
    width: 698rpx;
    height: 518rpx;
  }

}
</style>
<template>
  <view class="line">
    <view class="header">
      <view class="sensorname" @tap="showModal">小鱼塘-小A-进水啊实打实的</view><image class="header-img" src="../images/gd_7_copy@2x.png" style="width:30rpx;height:20rpx;"></image>
      <view class="status"><view class="status-dot"></view>异常</view>
    </view>
    <view class="content">
      <view class="cot-name">
        <text>传感器2-数据指标</text>
        <text class="time">{{time}}</text>
      </view>
      <view class="cot">
        <view class="cot-index">
          <view class="target">
            <image class="o2" src="../images/o_3_copy 2@2x.png"></image>
            <view class="data">溶氧 {{realTimeDataInfo.oxygen}}mg/L</view>
          </view>
          <view class="res">{{realTimeDataInfo.oxygen_status===0?'正常': (realTimeDataInfo.oxygen_status===1?'预警':'危险')}}</view>
        </view>
        <view class="cot-index">
          <view class="target">
            <image class="o2" src="../images/w@2x.png"></image>
            <view class="data">水温 {{realTimeDataInfo.water_temperature}}℃</view>
          </view>
          <view class="res">{{realTimeDataInfo.wt_status===0?'正常': (realTimeDataInfo.wt_status===1?'预警':'危险')}}</view>
        </view>
        <view class="cot-index">
          <view class="target">
            <image class="ph" src="../images/ph@2x.png"></image>
            <view class="data1">PH {{realTimeDataInfo.pH_value}}</view>
          </view>
          <view class="res">{{realTimeDataInfo.pH_status===0?'正常': (realTimeDataInfo.pH_status===1?'预警':'危险')}}</view>
        </view>
        <view class="cut"></view>
      </view>
    </view>
    <view class="line">
      <view class="line-but">
        <view class="but-index" @tap="switchToday">今日</view>
        <view class="but-index" @tap="switchToday">三日</view>
      </view>
    </view>

    <view wx:if="{{!switchToday}}">
      <view class="cha">
        <echarts :ec.sync="ec" :canvasId.sync="haha"/>
      </view>

      <!--<view class="cha">-->
        <!--<echarts :ec.sync="wt" :canvasId.sync="haha2"/>-->
      <!--</view>-->
      <!--<view class="cha">-->
        <!--<echarts :ec.sync="ph" />-->
      <!--</view>-->
    </view>

    <!--<view wx:if="{{switchToday}}">-->
      <!--<view class="cha">-->
        <!--<echarts :ec.sync="ec" />-->
      <!--</view>-->
      <!--<view class="cha">-->
        <!--<echarts :ec.sync="wt" />-->
      <!--</view>-->
      <!--<view class="cha">-->
        <!--<echarts :ec.sync="ph" />-->
      <!--</view>-->
    <!--</view>-->

    <!--模态框的遮罩层-->
    <view class="mask" catchtouchmove="preventTouchMove" wx:if="{{showModal}}"></view>
    <!--模态框-->
    <view class="modalDlg" wx:if="{{showModal}}">
      <view class="close" @tap="closemodal">
        <image class="closeimg" src="../images/n_cross80@2x.png"></image>
        <view class="closeline"></view>
      </view>
      <repeat for="{{tangkoulist}}" key="index" index="index">
        <view class="checkbox-item" data-selectindex="{{index}}" data-pondid="{{item.id}}" data-pond="{{item.pondname}}" @tap="selectRep">
          <view class="{{id === index ? 'select' : ''}}">
            <image src="{{id === index ? selectImage : noselectImage}}"></image><text>{{item.pondname}}</text>
          </view>
        </view>
      </repeat>
      <button wx:if="{{tangkoulist.length !== 0}}" class="modal-but" @tap="go">确定</button>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import Echarts from './echart'


export default class Line extends wepy.page {
    components = {
      echarts: Echarts
    }
    data = {
      haha:'myline',
      haha2:'myline2',
      switchToday: false,
      showModal: false,
      ec: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [],
            markLine: {
              symbol: '',
              itemStyle: {
                lineStyle: {type: 'solid'},
                label: {show: true, position: 'left', formatter: 'aaa'}
              },
              data: [
                { yAxis: 2,
                  itemStyle: {
                    color: '#beac00'
                  }
                },
                { yAxis: 3,
                  itemStyle: {
                    width: 1.5,
                    color: '#45795b'
                  }
                },
                { yAxis: 5,
                  itemStyle: {
                    width: 1.5,
                    color: '#b3675b'
                  }
                }
              ]
            }
          }]
        }
      },
      wt: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5],
            markLine: {
              symbol: '',
              itemStyle: {
                lineStyle: {type: 'solid'},
                label: {show: true, position: 'left', formatter: 'aaa'}
              },
              data: [
                { yAxis: 2,
                  itemStyle: {
                    color: '#beac00'
                  }
                },
                { yAxis: 3,
                  itemStyle: {
                    width: 1.5,
                    color: '#45795b'
                  }
                },
                { yAxis: 5,
                  itemStyle: {
                    width: 1.5,
                    color: '#b3675b'
                  }
                }
              ]
            }
          }]
        }
      },
      ph: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5]
          }]
        }
      },
      time: '',
      ind: 0,
      tangkoulist: [],
      realTimeDataInfo: [],
      selectImage: '../images/_14_copy@2x.png',
      noselectImage: '../images/_14_copy 2@2x.png'
    }
    methods = {
      switchToday() {
        this.switchToday = !this.switchToday
      },
      showModal() {
        this.showModal = true
      },
      selectRep(e) {
        let index = e.currentTarget.dataset.selectindex
        this.id = index
        this.tang = e.currentTarget.dataset.pond
        this.equimentinfo[0].pondId = e.currentTarget.dataset.pondid
        console.log(index)
        this.$apply()
      },
      closemodal() {
        this.showModal = false
        this.$apply()
      },
      // 跳转到更多塘口
      jupMoreEquiment() {
        wepy.navigateTo({
          url: `myequiment`
        })
      }
    }
    events = {}
    onShow() {
      // yyyy/mm/dd
      let nowDate = new Date()
      let year = nowDate.getFullYear()
      let month = nowDate.getMonth() + 1 < 10 ? '0' + (nowDate.getMonth() + 1)
        : nowDate.getMonth() + 1
      let day = nowDate.getDate() < 10 ? '0' + nowDate.getDate() : nowDate
        .getDate()
      let dateStr = year + '/' + month + '/' + day
      this.time = dateStr
      console.log(this.time)
      this.$apply()
    }
    onLoad(options) {
      var newWT = {
        textStyle: {
          color: '#c4c4c4'
        },
        color: ['#8dc1aa'],
        xAxis: [{
          type: 'category',
          boundaryGap: false,
          data: [1, 2, 3, 4, 5],
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          }
          // axisLabel: {//y轴的内容格式化,很有用的属性
          //   formatter: '{value} xUnit'
          // }
        }],
        yAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#e9e7de',
              type: 'dashed'
            }
          }
        }],
        series: [{
          lineStyle: {
            color: '#2c90f7'
          },
          type: 'line',
          data: [1, 2, 3, 4, 5]
        }]
      }
      var newPH = {
        textStyle: {
          color: '#c4c4c4'
        },
        color: ['#8dc1aa'],
        xAxis: [{
          type: 'category',
          boundaryGap: false,
          data: [1, 2, 3, 4, 5],
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          }
          // axisLabel: {//y轴的内容格式化,很有用的属性
          //   formatter: '{value} xUnit'
          // }
        }],
        yAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#e9e7de',
              type: 'dashed'
            }
          }
        }],
        series: [{
          lineStyle: {
            color: '#2c90f7'
          },
          type: 'line',
          data: [1, 2, 3, 4, 5]
        }]
      }
      if (options.id) {
        this.ind = options.id
      }
      // 获取塘口信息
      wepy.showLoading()
      wepy.request({
        url: this.$parent.globalData.baseUrl + 'api/' + 'usermanagement/HomePageDetail',
        data: {
          relation: this.$parent.globalData.relation
        },
        method: 'GET',
        success: res => {
          // 如果有塘口
          console.log(res.data.myHome)
          console.log(res.data.myHome[0].sensorlist)
          this.tangkoulist = res.data.myHome
          if (res.data.myHome[this.ind].sensorlist.length > 0) {
            // 获取实时数据
            let deviceSn = res.data.myHome[this.ind].sensorlist[0].sensor.device_sn
            // wepy.connectSocket({
            //   url: 'wss://192.168.0.111:8080/fishery/api/equipment/realTimeData',
            //   data: {
            //     device_sn: deviceSn
            //   },
            //   method: 'GET'
            // })
            // wepy.onSocketOpen((res) => {
            //   console.log('WebSocket连接已打开！')
            // })
            // wepy.onSocketMessage((res) => {
            //   console.log('收到服务器内容：' + res.data)
            // })

            wepy.showLoading()
            wepy.request({
              url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/realTimeData',
              data: res.data.myHome[this.ind].sensorlist[0].sensor,
              method: 'GET',
              success: res => {
                console.log(res.data)
                this.realTimeDataInfo = res.data
                this.$apply()
              },
              complete: () => {
                wepy.hideLoading()
              }
            })
            // 获取当天数据
            wepy.showLoading()
            wepy.request({
              url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/dataToday',
              data: {
                device_sn: deviceSn,
                way: 1
              },
              method: 'GET',
              success: res => {
                this.ec.option = {
                  textStyle: {
                    color: '#c4c4c4'
                  },
                  color: ['#8dc1aa'],
                  xAxis: [{
                    type: 'category',
                    boundaryGap: false,
                    data: res.data.DO.at,
                    axisLine: {
                      lineStyle: {
                        color: '#c4c4c4'
                      }
                    },
                    axisLabel: {// y轴的内容格式化,很有用的属性
                      formatter: '{value} xUnit'
                    }
                  }],
                  yAxis: [{
                    type: 'value',
                    axisLine: {
                      lineStyle: {
                        color: '#c4c4c4'
                      }
                    },
                    splitLine: {
                      lineStyle: {
                        color: '#e9e7de',
                        type: 'dashed'
                      }
                    }
                    // axisLabel: {//y轴的内容格式化,很有用的属性
                    //   formatter: '{value} yUnit'
                    // }
                  }],
                  series: [{
                    lineStyle: {
                      color: '#2c90f7'
                    },
                    type: 'line',
                    data: res.data.DO.value,
                    markLine: {
                      symbol: '',
                      itemStyle: {
                        lineStyle: {type: 'solid'},
                        label: {show: true, position: 'left', formatter: 'aaa'}
                      },
                      data: [
                        { yAxis: 2,
                          itemStyle: {
                            color: '#beac00'
                          }
                        },
                        { yAxis: 3,
                          itemStyle: {
                            width: 1.5,
                            color: '#45795b'
                          }
                        },
                        { yAxis: 5,
                          itemStyle: {
                            width: 1.5,
                            color: '#b3675b'
                          }
                        }
                      ]
                    }
                  }]
                }
                this.$apply()
                // newWT.xAxis.data = res.data.WT.at
                // newWT.series.data = res.data.WT.value
                // this.wt.option = newWT
                // newPH.xAxis.data = res.data.PH.at
                // newPH.series.data = res.data.PH.value
                // this.ph.option = newPH
                // this.$apply()
                // console.log(this.ec.option)
              },
              complete: () => {
                wepy.hideLoading()
              }
            })
          }
        },
        complete: () => {
          wepy.hideLoading()
        }
      })
    }
}
</script>
