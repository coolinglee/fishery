<style lang="less">
.line{
  font-size: 30rpx;
  color: #4E4E4E;
  .header{
    border: 2rpx solid #E6E6E6;
    .sensorname{
      width: 348rpx;
      height: 60rpx;
      font-size: 28rpx;
      display: inline-block;
      background-color: #F2F2F2;
      text-align: center;
      border-radius: 124rpx;
      line-height: 60rpx;
      padding-right: 30rpx;
      margin-left: 30rpx;
      margin-top: 32rpx;
      margin-bottom: 26rpx;
      overflow: hidden;
    }
    .header-img{
      width:30rpx;
      height:20rpx;
      position: relative;
      top: -45rpx;
      left: -40rpx;
    }
    .status{
      display: inline-block;
      position: relative;
      top: -46rpx;
      color:#FFC06B;
      .status-dot{
        display: inline-block;
        width: 16rpx;
        height: 16rpx;
        border-radius: 8rpx;
        margin-right: 10rpx;
        background-color: #FFC06B;
      }
    }
    .andmore{
      float: right;
      margin-top: 44rpx;
      margin-right: 20rpx;
    }
  }
  .content{
    .cot-name{
      padding: 34rpx;
      .time{
        color: #B5B5B5;
        float: right;
      }
    }
    .cot{
      font-size: 28rpx;
      .cot-index{
        display: inline-block;
        .target{
          width: 208rpx;
          height: 220rpx;
          margin: 18rpx;
          box-shadow: 0 4rpx 16rpx 0 rgba(225,225,225,0.50);
          border-radius: 16rpx;
          .o2{
            width:80rpx;
            height:80rpx;
            margin-left: 70rpx;
            margin-top: 46rpx;
          }
          .ph{
            width:65rpx;
            height:115rpx;
            margin-left: 70rpx;
            margin-top: 34rpx;
          }
          .data{
            padding-top: 20rpx;
            text-align: center;
          }
          .data1{
            padding-top: 8rpx;
            text-align: center;
          }
        }
        .res{
          position: relative;
          left: 104rpx;
        }
      }
    }
    .cut{
      margin-top: 20rpx;
      height: 40rpx;
      background-color: #F2F2F2;
    }
  }
  .line{
    .line-but{
      padding: 60rpx;
      .but-index{
        width: 176rpx;
        height: 60rpx;
        margin-left: 90rpx;
        display: inline-block;
        line-height: 60rpx;
        text-align: center;
        border-radius: 200rpx;
        border: 2rpx solid #2F70B8;
      }
    }
  }
  #cha{
    height: 518rpx;
    width: 698rpx;
    background: #f9f9f9;
    margin: 30rpx;
  }
  ec-canvas {
    width: 698rpx;
    height: 518rpx;
  }

}
</style>
<template>
  <view class="line">
    <view class="header">
      <view class="sensorname">小鱼塘-小A-进水啊实打实的</view><image class="header-img" src="../images/多_7_copy@2x.png" style="width:30rpx;height:20rpx;"></image>
      <view class="status"><view class="status-dot"></view>异常</view>
    </view>
    <view class="content">
      <view class="cot-name">
        <text>传感器2-数据指标</text>
        <text class="time">{{time}}</text>
      </view>
      <view class="cot">
        <view class="cot-index">
          <view class="target">
            <image class="o2" src="../images/氧_3_copy 2@2x.png"></image>
            <view class="data">溶氧 {{}}mg/L</view>
          </view>
          <view class="res">正常</view>
        </view>
        <view class="cot-index">
          <view class="target">
            <image class="o2" src="../images/温@2x.png"></image>
            <view class="data">水温 21℃</view>
          </view>
          <view class="res">正常</view>
        </view>
        <view class="cot-index">
          <view class="target">
            <image class="ph" src="../images/ph@2x.png"></image>
            <view class="data1">PH 8.5</view>
          </view>
          <view class="res">正常</view>
        </view>
        <view class="cut"></view>
      </view>
    </view>
    <view class="line">
      <view class="line-but">
        <view class="but-index">今日</view>
        <view class="but-index">三日</view>
      </view>
    </view>
    <view id="cha">
      <echarts :ec.sync="ec" />
    </view>
    <view id="cha">
      <echarts :ec.sync="wt" />
    </view>
    <view id="cha">
      <echarts :ec.sync="ph" />
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import Echarts from './echart'

export default class Line extends wepy.page {
    components = {
      echarts: Echarts
    }
    data = {
      ec: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5],
            markLine: {
              symbol: '',
              itemStyle: {
                lineStyle: {type: 'solid'},
                label: {show: true, position: 'left', formatter: 'aaa'}
              },
              data: [
                { yAxis: 2,
                  itemStyle: {
                    color: '#beac00'
                  }
                },
                { yAxis: 3,
                  itemStyle: {
                    width: 1.5,
                    color: '#45795b'
                  }
                },
                { yAxis: 5,
                  itemStyle: {
                    width: 1.5,
                    color: '#b3675b'
                  }
                }
              ]
            }
          }]
        }
      },
      wt: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5]
          }]
        }
      },
      ph: {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5]
          }]
        }
      },
      time: '',
      ind: 0,
      tangkoulist:[]
    }
    methods = {
      // 跳转到更多塘口
      jupMoreEquiment() {
        wepy.navigateTo({
          url: `myequiment`
        })
      },
      getRealTime () {
        if (res.data.myHome[num].sensorlist.length > 0) {
          wepy.request({
            url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/realTimeData',
            data: res.data.myHome[num].sensorlist[0].sensor,
            method: 'GET',
            success: res => {
              console.log(res.data)
              this.realTimeDataInfo = res.data
              this.$apply()
            }
          })
        }
      }
    }
    events = {}
    onShow() {
      // yyyy/mm/dd
      let nowDate = new Date()
      let year = nowDate.getFullYear()
      let month = nowDate.getMonth() + 1 < 10 ? '0' + (nowDate.getMonth() + 1)
        : nowDate.getMonth() + 1
      let day = nowDate.getDate() < 10 ? '0' + nowDate.getDate() : nowDate
        .getDate()
      let dateStr = year + '/' + month + '/' + day
      this.time = dateStr
      console.log(this.time)
      this.$apply()
    }
    onLoad(options) {
      var newOtion = {
        textStyle: {
          color: '#c4c4c4'
        },
        color: ['#8dc1aa'],
        xAxis: [{
          type: 'category',
          boundaryGap: false,
          data: ['2018-07-05 09:03:04.687', '2018-07-05 09:39:27.329',
            '2018-07-05 10:15:10.846', '2018-07-05 11:02:03.828',
            '2018-07-05 11:37:45.406', '2018-07-05 12:14:07.787',
            '2018-07-05 12:50:27.692', '2018-07-05 13:26:49.888',
            '2018-07-05 14:03:12.771', '2018-07-05 14:39:33.913',
            '2018-07-05 15:15:54.387', '2018-07-05 15:51:36.951',
            '2018-07-05 16:27:57.529', '2018-07-05 17:04:18.973',
            '2018-07-05 17:40:41.530', '2018-07-05 18:17:04.550',
            '2018-07-05 19:02:42.225'],
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          },
          axisLabel: {// y轴的内容格式化,很有用的属性
            formatter: '{value} xUnit'
          }
        }],
        yAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#c4c4c4'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#e9e7de',
              type: 'dashed'
            }
          }
          // axisLabel: {//y轴的内容格式化,很有用的属性
          //   formatter: '{value} yUnit'
          // }
        }],
        series: [{
          lineStyle: {
            color: '#2c90f7'
          },
          type: 'line',
          data: [7.3, 7.1, 7, 6.9, 6.9, 6.9, 6.9, 6.8, 6.8, 6.8, 6.8, 6.7, 6.7, 6.7, 6.7, 6.8, 6.8, 6.7],
          markLine: {
            symbol: '',
            itemStyle: {
              lineStyle: {type: 'solid'},
              label: {show: true, position: 'left', formatter: 'aaa'}
            },
            data: [
              { yAxis: 2,
                itemStyle: {
                  color: '#beac00'
                }
              },
              { yAxis: 3,
                itemStyle: {
                  width: 1.5,
                  color: '#45795b'
                }
              },
              { yAxis: 5,
                itemStyle: {
                  width: 1.5,
                  color: '#b3675b'
                }
              }
            ]
          }
        }]
      }
      var newWT = {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5]
          }]
        }
      }
      var newPH = {
        option: {
          textStyle: {
            color: '#c4c4c4'
          },
          color: ['#8dc1aa'],
          xAxis: [{
            type: 'category',
            boundaryGap: false,
            data: [1, 2, 3, 4, 5],
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            }
            // axisLabel: {//y轴的内容格式化,很有用的属性
            //   formatter: '{value} xUnit'
            // }
          }],
          yAxis: [{
            type: 'value',
            axisLine: {
              lineStyle: {
                color: '#c4c4c4'
              }
            },
            splitLine: {
              lineStyle: {
                color: '#e9e7de',
                type: 'dashed'
              }
            }
          }],
          series: [{
            lineStyle: {
              color: '#2c90f7'
            },
            type: 'line',
            data: [1, 2, 3, 4, 5]
          }]
        }
      }
      if (options.id) {
        this.ind = options.id
      }
      // 获取塘口信息
      wepy.showLoading()
      wepy.request({
        url: this.$parent.globalData.baseUrl + 'api/' + 'usermanagement/HomePageDetail',
        data: {
          relation: this.$parent.globalData.relation
        },
        method: 'GET',
        success: res => {
          // 如果有塘口
          console.log(res.data.myHome)
          this.tangkoulist = res.data.myHome
          let deviceSn = res.data.myHome[this.ind].sensorlist[0].sensor.device_sn
          // 获取当天数据
          wepy.request({
            url: this.$parent.globalData.baseUrl + 'api/' + 'equipment/dataToday',
            data: {
              device_sn: deviceSn,
              way: 1
            },
            method: 'GET',
            success: res => {
              newOtion.xAxis.data = res.data.DO.at
              newOtion.series.data = res.data.DO.value
              this.ec.option = newOtion
              newWT.xAxis.data = res.data.WT.at
              newWT.series.data = res.data.WT.value
              this.wt.option = newWT
              newPH.xAxis.data = res.data.PH.at
              newPH.series.data = res.data.PH.value
              this.ph.option = newPH
              this.$apply()
              console.log(this.ec.option)
            },
            complete: () => {
              wepy.hideLoading()
            }
          })
        }
      })
    }
}
</script>
